{
    "patches": [
        {
            "label": "2025-10-21_20-39-19",
            "content": "@@ -749,488 +749,8 @@\n init\n-__(self, calibre: float):%0A        self.__calibre = calibre%0A        self.__grafite = None%0A        %0A    def get__calibre(self):%0A        return self.__calibre%0A    def ten__grafite(self):%0A        return self.__grafite is not None%0A    def inserir(self, grafite: Grafite):%0A        if grafite.get__calibre()!= self.__calibre:%0A                print(%22fail: calibre incompativel%22)%0A                return%0A        if self.ten__grafite():%0A            print(%22fail: ja existe grafite%22)%0A%0A        \n  %0A  \n",
            "lines": "29"
        },
        {
            "label": "2025-10-21_20-44-51",
            "content": "@@ -1157,17 +1157,17 @@\n  self.te\n-m\n+n\n __grafit\n@@ -1215,29 +1215,16 @@\n rafite%22)\n-%0A            \n %0A%0A      \n",
            "lines": "44"
        },
        {
            "label": "2025-10-21_20-49-16",
            "content": "@@ -611,21 +611,16 @@\n reza,0)%0A\n-    %0A\n     def \n@@ -626,32 +626,32 @@\n  __str__(self):%0A\n+\n             retu\n@@ -901,21 +901,16 @@\n calibre%0A\n-    %0A\n     def \n@@ -971,21 +971,16 @@\n ot None%0A\n-    %0A\n     def \n@@ -1220,513 +1220,8 @@\n e%22)%0A\n-            return%0A        self.__grafite = grafite%0A        %0A    def remover(self):%0A        if not self.ten__grafite():%0A            print(%22fail: nao existe grafite%22)%0A            return None%0A        grafite_removido = self.__grafite%0A        self.__grafite = None %0A        return grafite_removido%0A    %0A    def __str(self):%0A        if self.__grafite is None:%0A            return f%22calibre %7Bself.__calibre%7D, grafite: null%22%0A        else:%0A            return f%22calibre:%7Bself.__calibre%7D, grafite:%7Bself.__grafite%7D%22%0A\n     \n@@ -1230,16 +1230,16 @@\n       %0A%0A\n+\n         \n@@ -1240,17 +1240,12 @@\n        %0A    \n-%0A    \n",
            "lines": "45"
        },
        {
            "label": "2025-10-27_18-35-17",
            "content": "@@ -1754,690 +1754,17 @@\n   %0A%0A\n-lap = None%0A%0Awhile True:%0A    try:%0A        entrada = input().strip()%0A    except EOFError:%0A        break%0A%0A    if entrada == %22%22:%0A        continue%0A%0A    print(%22$%22 + entrada)%0A    partes = entrada.split()%0A    cmd = partes%5B0%5D%0A%0A    if cmd == %22end%22:%0A        break%0A%0A    elif cmd == %22init%22:%0A        calibre = float(partes%5B1%5D)%0A        lap = Lapiseira(calibre)%0A%0A    elif cmd == %22show%22:%0A        print(lap)%0A%0A    elif cmd == %22inserir%22:%0A        calibre = float(partes%5B1%5D)%0A        dureza = partes%5B2%5D%0A        tamanho = int(partes%5B3%5D)%0A        g = Grafite(calibre, dureza, tamanho)%0A        lap.inserir(g)%0A%0A    elif cmd == %22remover%22:%0A        lap.remover()%0A%0A    else:%0A        print(%22fail: comando invalido%22)\n+         \n %0A   \n",
            "lines": "65"
        },
        {
            "label": "2025-10-27_18-36-30",
            "content": "@@ -1754,25 +1754,8 @@\n   %0A%0A\n-%0Adef main():%0A    \n lap \n@@ -1761,20 +1761,17 @@\n  = None%0A\n-    \n+%0A\n while Tr\n@@ -1774,20 +1774,16 @@\n e True:%0A\n-    \n     try:\n@@ -1783,20 +1783,16 @@\n    try:%0A\n-    \n         \n@@ -1821,20 +1821,16 @@\n p()%0A    \n-   \n- \n except E\n@@ -1838,20 +1838,16 @@\n FError:%0A\n-    \n         \n@@ -1849,28 +1849,24 @@\n      break%0A%0A\n-    \n     if entra\n@@ -1883,20 +1883,16 @@\n         \n- \n-   \n continue\n@@ -1901,37 +1901,29 @@\n     \n-   \n- \n print(\n-f\n %22$\n-%7B\n+%22 + \n entrada\n-%7D%22)%0A    \n+)%0A\n     \n@@ -1951,20 +1951,16 @@\n t()%0A    \n-  \n-  \n cmd = pa\n@@ -1968,20 +1968,16 @@\n tes%5B0%5D%0A%0A\n-    \n     if c\n@@ -1993,28 +1993,24 @@\n d%22:%0A        \n-    \n break%0A%0A     \n@@ -2004,28 +2004,24 @@\n  break%0A%0A    \n- \n-   \n elif cmd == \n@@ -2028,20 +2028,16 @@\n %22init%22:%0A\n-    \n         \n@@ -2071,20 +2071,16 @@\n         \n-   \n- \n lap = La\n@@ -2097,20 +2097,16 @@\n libre)%0A%0A\n-    \n     elif\n@@ -2125,28 +2125,24 @@\n w%22:%0A        \n- \n-   \n print(lap)%0A%0A\n@@ -2141,28 +2141,24 @@\n t(lap)%0A%0A    \n-  \n-  \n elif cmd == \n@@ -2164,28 +2164,24 @@\n  %22inserir%22:%0A\n-    \n         cali\n@@ -2199,28 +2199,24 @@\n (partes%5B1%5D)%0A\n-    \n         dure\n@@ -2238,20 +2238,16 @@\n         \n-    \n tamanho \n@@ -2263,20 +2263,16 @@\n tes%5B3%5D)%0A\n-    \n         \n@@ -2313,28 +2313,24 @@\n ho)%0A        \n-   \n- \n lap.inserir(\n@@ -2333,20 +2333,16 @@\n rir(g)%0A%0A\n-    \n     elif\n@@ -2364,28 +2364,24 @@\n r%22:%0A        \n-    \n lap.remover(\n@@ -2383,38 +2383,30 @@\n over()%0A%0A    \n- \n-   \n else:%0A\n-    \n         prin\n@@ -2437,47 +2437,12 @@\n o%22)%0A\n-%0A%0Aif __name__ == %22__main__%22:%0A    main()\n+    \n %0A   \n",
            "lines": "101"
        },
        {
            "label": "2025-10-27_18-37-28",
            "content": "@@ -1536,34 +1536,32 @@\n   %0A    def __str\n-__\n (self):%0A        \n",
            "lines": "105"
        },
        {
            "label": "2025-10-27_18-38-58",
            "content": "@@ -67,16 +67,17 @@\n  tamanho\n+ \n : int):%0A\n@@ -165,32 +165,40 @@\n manho = tamanho%0A\n+        \n %0A    def get_cal\n@@ -186,32 +186,33 @@\n    %0A    def get_\n+_\n calibre(self):%0A \n@@ -232,33 +232,32 @@\n  self.__calibre%0A\n-%0A\n     def get_dure\n@@ -252,16 +252,17 @@\n def get_\n+_\n dureza(s\n@@ -296,17 +296,16 @@\n _dureza%0A\n-%0A\n     def \n@@ -308,16 +308,17 @@\n def get_\n+_\n tamanho(\n@@ -354,17 +354,16 @@\n tamanho%0A\n-%0A\n     def \n@@ -366,16 +366,17 @@\n def set_\n+_\n tamanho(\n@@ -424,17 +424,20 @@\n  = valor\n-%0A\n+    \n %0A    def\n@@ -496,17 +496,16 @@\n    %22HB%22:\n- \n 1,%0A     \n@@ -516,17 +516,16 @@\n    %222B%22:\n- \n 2,%0A     \n@@ -536,17 +536,16 @@\n    %224B%22:\n- \n 4,%0A     \n@@ -556,17 +556,16 @@\n    %226B%22:\n- \n 6%0A      \n@@ -612,12 +612,15 @@\n eza,\n- \n 0)%0A\n+    \n %0A   \n@@ -631,32 +631,36 @@\n  __str__(self):%0A\n+    \n         return f\n@@ -835,24 +835,32 @@\n fite = None%0A\n+        \n %0A    def get\n@@ -856,24 +856,25 @@\n     def get_\n+_\n calibre(self\n@@ -906,16 +906,20 @@\n calibre%0A\n+    \n %0A    def\n@@ -921,17 +921,18 @@\n   def te\n-m\n+n_\n _grafite\n@@ -981,16 +981,20 @@\n ot None%0A\n+    \n %0A    def\n@@ -1050,16 +1050,17 @@\n ite.get_\n+_\n calibre(\n@@ -1060,17 +1060,16 @@\n alibre()\n- \n != self.\n@@ -1079,16 +1079,20 @@\n alibre:%0A\n+    \n         \n@@ -1135,32 +1135,36 @@\n l%22)%0A            \n+    \n return%0A        i\n@@ -1166,32 +1166,33 @@\n     if self.tem_\n+_\n grafite():%0A     \n@@ -1283,16 +1283,24 @@\n grafite%0A\n+        \n %0A    def\n@@ -1337,17 +1337,18 @@\n  self.te\n-m\n+n_\n _grafite\n@@ -1484,32 +1484,33 @@\n __grafite = None\n+ \n %0A        return \n@@ -1526,16 +1526,20 @@\n emovido%0A\n+    \n %0A    def\n@@ -1557,39 +1557,8 @@\n lf):\n-  # %3C-- CONFIRA ESTE NOME AQUI!\n %0A   \n@@ -1609,33 +1609,32 @@\n return f%22calibre\n-:\n  %7Bself.__calibre\n@@ -1694,17 +1694,16 @@\n calibre:\n- \n %7Bself.__\n@@ -1720,17 +1720,16 @@\n grafite:\n- \n %7Bself.__\n@@ -1738,16 +1738,29 @@\n afite%7D%22%0A\n+            %0A\n %0A%0Adef ma\n@@ -2229,59 +2229,8 @@\n lap)\n-  # %3C-- AQUI O __str__ SER%C3%81 CHAMADO AUTOMATICAMENTE\n %0A%0A  \n@@ -2599,8 +2599,12 @@\n  main()%0A\n+    \n",
            "lines": "105"
        },
        {
            "label": "2025-10-27_18-39-37",
            "content": "@@ -1488,32 +1488,63 @@\n f __str__(self):\n+  # %3C-- CONFIRA ESTE NOME AQUI!\n %0A        if self\n@@ -2193,86 +2193,91 @@\n lap)\n-%0A%0A        elif cmd == %22insert%22:  # %3C%E2%94%80%E2%94%80 o avaliador usa %22insert%22, n%C3%A3o %22inserir%22\n+  # %3C-- AQUI O __str__ SER%C3%81 CHAMADO AUTOMATICAMENTE%0A%0A        elif cmd == %22inserir%22:\n %0A   \n@@ -2485,16 +2485,17 @@\n  %22remove\n+r\n %22:%0A     \n",
            "lines": "107"
        },
        {
            "label": "2025-10-27_18-40-59",
            "content": "@@ -2577,9 +2577,8 @@\n  main()%0A\n-%0A\n",
            "lines": "107"
        },
        {
            "label": "2025-10-27_18-43-13",
            "content": "@@ -2140,44 +2140,8 @@\n w%22:%0A\n-            if lap is not None:%0A    \n     \n@@ -2159,24 +2159,25 @@\n nt(lap)%0A\n+%0A\n         \n     else\n@@ -2172,102 +2172,76 @@\n     \n-    else:%0A                print(%22fail: lapiseira nao iniciada%22)%0A%0A        elif cmd ==\n+elif cmd == %22insert%22:  # %3C%E2%94%80%E2%94%80 o avaliador usa %22insert%22, n%C3%A3o\n  %22inser\n-t%22:\n+ir%22\n %0A   \n@@ -2348,44 +2348,8 @@\n 3%5D)%0A\n-            if lap is not None:%0A    \n     \n@@ -2402,28 +2402,24 @@\n             \n-    \n lap.inserir(\n@@ -2425,243 +2425,63 @@\n (g)%0A\n-            else:%0A                print(%22fail: lapiseira nao iniciada%22)%0A%0A        elif cmd == %22remove%22:%0A            if lap is not None:%0A                lap.remover()%0A            else:%0A                print(%22fail: lapiseira nao iniciada%22\n+%0A        elif cmd == %22remove%22:%0A            lap.remover(\n )%0A%0A \n@@ -2577,8 +2577,9 @@\n  main()%0A\n+%0A\n",
            "lines": "108"
        },
        {
            "label": "2025-10-27_18-43-55",
            "content": "@@ -2140,36 +2140,32 @@\n w%22:%0A            \n-    \n if lap is not No\n@@ -2180,28 +2180,24 @@\n             \n-    \n print(lap)%0A \n@@ -2203,38 +2203,30 @@\n             \n- \n-   \n else:%0A\n-    \n             \n@@ -2268,17 +2268,16 @@\n iada%22)%0A%0A\n-%0A\n         \n",
            "lines": "116"
        },
        {
            "label": "2025-10-27_18-47-28",
            "content": "@@ -1569,36 +1569,32 @@\n  %7Bself.__calibre\n-:.1f\n %7D, grafite: null\n@@ -1654,20 +1654,16 @@\n _calibre\n-:.1f\n %7D, grafi\n@@ -1686,17 +1686,16 @@\n ite%7D%22%0A%0A%0A\n-%0A\n def main\n",
            "lines": "117"
        },
        {
            "label": "2025-10-27_18-50-02",
            "content": "@@ -697,16 +697,18 @@\n tamanho%7D\n+mm\n %22%0A%0A%0Aclas\n@@ -1482,24 +1482,23 @@\n     def \n-escrever\n+__str__\n (self):%0A\n@@ -1508,36 +1508,30 @@\n      if \n-not \n self.\n-tem\n+_\n _grafite\n ():%0A    \n@@ -1526,793 +1526,366 @@\n fite\n-():%0A            print(%22fail: nao existe grafite%22)%0A            return%0A%0A        grafite = self.__grafite%0A        tamanho = grafite.get_tamanho()%0A%0A        if tamanho %3C= 10:%0A            print(%22fail: tamanho insuficiente%22)%0A            return%0A%0A        gasto = grafite.gasto_por_folha()%0A        tamanho_final = tamanho - gasto%0A%0A        if tamanho_final %3C 10:%0A            grafite.set_tamanho(10)%0A            print(%22fail: folha incompleta%22)%0A            return%0A%0A        grafite.set_tamanho(tamanho_final)%0A%0A    def __str__(self):%0A        if self.tem_grafite():%0A            return f%22calibre: %7Bself.__calibre:.1f%7D, grafite: %5B%7Bself.__grafite%7D%5D%22%0A        else:%0A            return f%22calibre: %7Bself.__calibre:.1f%7D, grafite: null%22%0A%0Adef main():%0A    lapiseira = None%0A%0A    while True:%0A        line = input()\n+ is None:%0A            return f%22calibre: %7Bself.__calibre:.1f%7D, grafite: null%22%0A        else:%0A            return f%22calibre: %7Bself.__calibre:.1f%7D, grafite: %7Bself.__grafite%7D%22%0A%0A%0A%0Adef main():%0A    lap = None%0A    while True:%0A        try:%0A            entrada = input().strip()%0A        except EOFError:%0A            break%0A%0A        if entrada == %22%22:%0A            continue%0A\n %0A   \n@@ -1899,20 +1899,23 @@\n int(f%22$%7B\n-line\n+entrada\n %7D%22)%0A    \n@@ -1922,19 +1922,24 @@\n     \n+p\n ar\n-g\n+te\n s = \n-line\n+entrada\n .spl\n@@ -1943,25 +1943,24 @@\n split()%0A\n-%0A\n         \n if args%5B\n@@ -1951,26 +1951,47 @@\n         \n-if args%5B0%5D\n+cmd = partes%5B0%5D%0A%0A        if cmd\n  == %22end\n@@ -2021,31 +2021,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22init%22:%0A\n@@ -2060,35 +2060,37 @@\n calibre = float(\n+p\n ar\n-g\n+te\n s%5B1%5D)%0A          \n@@ -2094,22 +2094,16 @@\n      lap\n-iseira\n  = Lapis\n@@ -2126,31 +2126,27 @@\n        elif \n-args%5B0%5D\n+cmd\n  == %22show%22:%0A\n@@ -2161,102 +2161,36 @@\n     \n-if lapiseira is None:%0A                print(%22fail:\n+    if\n  lap\n+ \n is\n-eira nao iniciada%22)%0A            else:%0A\n+ not None:%0A    \n     \n@@ -2214,16 +2214,9 @@\n (lap\n-iseira)%0A\n+)\n %0A   \n@@ -2224,68 +2224,26 @@\n     \n-elif args%5B0%5D == %22insert%22:%0A            if lapiseira is None:%0A\n+        else:%0A    \n     \n@@ -2288,34 +2288,34 @@\n  iniciada%22)%0A\n-  \n+%0A%0A\n         \n       contin\n@@ -2298,39 +2298,45 @@\n )%0A%0A%0A        \n-      continue%0A\n+elif cmd == %22insert%22:\n %0A           \n@@ -2352,19 +2352,21 @@\n = float(\n+p\n ar\n-g\n+te\n s%5B1%5D)%0A  \n@@ -2384,19 +2384,21 @@\n ureza = \n+p\n ar\n-g\n+te\n s%5B2%5D%0A   \n@@ -2420,19 +2420,21 @@\n o = int(\n+p\n ar\n-g\n+te\n s%5B3%5D)%0A  \n@@ -2443,23 +2443,53 @@\n         \n-grafite\n+if lap is not None:%0A                g\n  = Grafi\n@@ -2529,25 +2529,23 @@\n         \n+   \n+ \n lap\n-iseira\n .inserir\n@@ -2550,16 +2550,9 @@\n ir(g\n-rafite)%0A\n+)\n %0A   \n@@ -2560,65 +2560,15 @@\n     \n-elif args%5B0%5D == %22remove%22:%0A            if lapiseira is Non\n+    els\n e:%0A \n@@ -2616,32 +2616,33 @@\n  iniciada%22)%0A\n+%0A\n         \n         cont\n@@ -2629,32 +2629,37 @@\n         \n-        continue\n+elif cmd == %22remove%22:\n %0A       \n@@ -2667,206 +2667,128 @@\n     \n+if \n lap\n+ \n is\n-eira.remover()%0A%0A        elif args%5B0%5D == %22write%22:%0A            if lapiseira is None:%0A                print(%22fail: lapiseira nao iniciada%22)%0A                continue%0A            lapiseira.escrever(\n+ not None:%0A                lap.remover()%0A            else:%0A                print(%22fail: lapiseira nao iniciada%22\n )%0A%0A \n@@ -2848,15 +2848,44 @@\n o%22)%0A\n+%0A%0Aif __name__ == %22__main__%22:%0A    \n main()%0A\n-%0A%0A%0A%0A\n",
            "lines": "118"
        },
        {
            "label": "2025-10-27_19-28-55",
            "content": "class Grafite:\n    def __init__(self, calibre: float, dureza: str, tamanho: int):\n        self.__calibre = calibre\n        self.__dureza = dureza\n        self.__tamanho = tamanho\n\n    def get_calibre(self):\n        return self.__calibre\n\n    def get_dureza(self):\n        return self.__dureza\n\n    def get_tamanho(self):\n        return self.__tamanho\n\n    def set_tamanho(self, valor: int):\n        self.__tamanho = valor\n\n    def gasto_por_folha(self):\n        gastos = {\n            \"HB\": 1,\n            \"2B\": 2,\n            \"4B\": 4,\n            \"6B\": 6\n        }\n        return gastos.get(self.__dureza, 0)\n\n    def __str__(self):\n        return f\"{self.__calibre:.1f}:{self.__dureza}:{self.__tamanho}\"\n\n\nclass Lapiseira:\n    def __init__(self, calibre: float):\n        self.__calibre = calibre\n        self.__grafite = None\n\n    def get_calibre(self):\n        return self.__calibre\n\n    def tem_grafite(self):\n        return self.__grafite is not None\n\n    def inserir(self, grafite: Grafite):\n        if grafite.get_calibre() != self.__calibre:\n            print(\"fail: calibre incompativel\")\n            return\n        if self.tem_grafite():\n            print(\"fail: ja existe grafite\")\n            return\n        self.__grafite = grafite\n\n    def remover(self):\n        if not self.tem_grafite():\n            print(\"fail: nao existe grafite\")\n            return None\n        grafite_removido = self.__grafite\n        self.__grafite = None\n        return grafite_removido\n\n    def escrever(self):\n        if not self.tem_grafite():\n            print(\"fail: nao existe grafite\")\n            return\n\n        grafite = self.__grafite\n        tamanho = grafite.get_tamanho()\n\n        if tamanho <= 10:\n            print(\"fail: tamanho insuficiente\")\n            return\n\n        gasto = grafite.gasto_por_folha()\n        tamanho_final = tamanho - gasto\n\n        if tamanho_final < 10:\n            grafite.set_tamanho(10)\n            print(\"fail: folha incompleta\")\n            return\n\n        grafite.set_tamanho(tamanho_final)\n\n    def __str__(self):\n        if self.tem_grafite():\n            return f\"calibre: {self.__calibre:.1f}, grafite: [{self.__grafite}]\"\n        else:\n            return f\"calibre: {self.__calibre:.1f}, grafite: null\"\n\ndef main():\n    lapiseira = None\n\n    while True:\n        line = input()\n        print(f\"${line}\")\n        args = line.split()\n\n        if args[0] == \"end\":\n            break\n\n        elif args[0] == \"init\":\n            calibre = float(args[1])\n            lapiseira = Lapiseira(calibre)\n\n        elif args[0] == \"show\":\n            if lapiseira is None:\n                print(\"fail: lapiseira nao iniciada\")\n            else:\n                print(lapiseira)\n\n        elif args[0] == \"insert\":\n            if lapiseira is None:\n                print(\"fail: lapiseira nao iniciada\")\n                continue\n\n            calibre = float(args[1])\n            dureza = args[2]\n            tamanho = int(args[3])\n            grafite = Grafite(calibre, dureza, tamanho)\n            lapiseira.inserir(grafite)\n\n        elif args[0] == \"remove\":\n            if lapiseira is None:\n                print(\"fail: lapiseira nao iniciada\")\n                continue\n            lapiseira.remover()\n\n        elif args[0] == \"write\":\n            if lapiseira is None:\n                print(\"fail: lapiseira nao iniciada\")\n                continue\n            lapiseira.escrever()\n\n        else:\n            print(\"fail: comando invalido\")\nmain()\n\n\n\n\n",
            "lines": "138"
        }
    ]
}