{
    "patches": [
        {
            "label": "2025-10-27_21-29-39",
            "content": "@@ -1,6260 +0,0 @@\n-class Notebook:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A%0A    def ligar(self):%0A        if not self.__ligado:%0A            self.__ligado = True%0A            print(%22msg: notebook ligado%22)%0A        else:%0A            print(%22msg: notebook j%C3%A1 est%C3%A1 ligado%22)%0A%0A    def desligar(self):%0A        if self.__ligado:%0A            self.__ligado = False%0A            print(%22msg: notebook desligado%22)%0A        else:%0A            print(%22msg: notebook j%C3%A1 est%C3%A1 desligado%22)%0A%0A    def mostrar(self):%0A        status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A        print(f%22msg: Status: %7Bstatus%7D%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22msg: erro: ligue o notebook primeiro%22)%0A        else:%0A            print(f%22msg: Usando por %7Btempo%7D minutos%22)%0A%0A%0A# ================== PARTE 2 - Notebook com Bateria ==================%0A%0Aclass Bateria:%0A    def __init__(self, capacidade: int):%0A        self.__capacidade: int = capacidade%0A        self.__carga: int = capacidade%0A%0A    def get_capacidade(self):%0A        return self.__capacidade%0A%0A    def get_carga(self):%0A        return self.__carga%0A%0A    def descarregar(self, tempo: int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A    def carregar(self, tempo: int):%0A        self.__carga += tempo%0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def mostrar(self):%0A        print(f%22(%7Bself.__carga%7D/%7Bself.__capacidade%7D)%22)%0A%0A%0Aclass Notebook2:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22msg: bateria removida%22)%0A            b = self.__bateria%0A            self.__bateria = None%0A            self.__ligado = False%0A            return b%0A        else:%0A            print(%22msg: sem bateria%22)%0A            return None%0A%0A    def ligar(self):%0A        if self.__bateria is None or self.__bateria.get_carga() %3C= 0:%0A            print(%22msg: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A        else:%0A            self.__ligado = True%0A            print(%22msg: notebook ligado%22)%0A%0A    def desligar(self):%0A        self.__ligado = False%0A        print(%22msg: notebook desligado%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22msg: notebook desligado%22)%0A            return%0A%0A        carga_atual = self.__bateria.get_carga()%0A        if carga_atual == 0:%0A            print(%22msg: notebook descarregado%22)%0A            self.__ligado = False%0A            return%0A%0A        if tempo %3E= carga_atual:%0A            print(f%22msg: Usando por %7Bcarga_atual%7D minutos, notebook descarregou%22)%0A            self.__bateria.descarregar(tempo)%0A            self.__ligado = False%0A        else:%0A            print(f%22msg: Usando por %7Btempo%7D minutos%22)%0A            self.__bateria.descarregar(tempo)%0A%0A    def mostrar(self):%0A        status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A        if self.__bateria is None:%0A            print(f%22msg: Status: %7Bstatus%7D, Bateria: Nenhuma%22)%0A        else:%0A            print(f%22msg: Status: %7Bstatus%7D, Bateria: (%7Bself.__bateria.get_carga()%7D/%7Bself.__bateria.get_capacidade()%7D)%22)%0A%0A%0A# ================== PARTE 3 - Notebook com Bateria e Carregador ==================%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self):%0A        return self.__potencia%0A%0A    def mostrar(self):%0A        print(f%22(Pot%C3%AAncia %7Bself.__potencia%7D)%22)%0A%0A%0Aclass Notebook3:%0A    def __init__(self):%0A        self.__ligado: bool = False%0A        self.__bateria: Bateria %7C None = None%0A        self.__carregador: Carregador %7C None = None%0A%0A    def setBateria(self, bateria: Bateria):%0A        self.__bateria = bateria%0A%0A    def rmBateria(self):%0A        if self.__bateria is not None:%0A            print(%22msg: bateria removida%22)%0A            b = self.__bateria%0A            self.__bateria = None%0A            if self.__carregador is None:%0A                self.__ligado = False%0A            return b%0A        else:%0A            print(%22msg: sem bateria%22)%0A            return None%0A%0A    def setCarregador(self, carregador: Carregador):%0A        self.__carregador = carregador%0A%0A    def rmCarregador(self):%0A        if self.__carregador is not None:%0A            print(%22msg: carregador removido%22)%0A            self.__carregador = None%0A            if self.__bateria is None:%0A                self.__ligado = False%0A        else:%0A            print(%22msg: sem carregador%22)%0A%0A    def ligar(self):%0A        if (self.__bateria and self.__bateria.get_carga() %3E 0) or self.__carregador:%0A            self.__ligado = True%0A            print(%22msg: notebook ligado%22)%0A        else:%0A            print(%22msg: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def usar(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22msg: notebook desligado%22)%0A            return%0A%0A        # Caso 1: apenas bateria%0A        if self.__bateria and not self.__carregador:%0A            carga = self.__bateria.get_carga()%0A            if tempo %3E= carga:%0A                print(f%22msg: Usando por %7Bcarga%7D minutos, notebook descarregou%22)%0A                self.__bateria.descarregar(tempo)%0A                self.__ligado = False%0A            else:%0A                print(f%22msg: Usando por %7Btempo%7D minutos%22)%0A                self.__bateria.descarregar(tempo)%0A            return%0A%0A        # Caso 2: apenas carregador%0A        if self.__carregador and not self.__bateria:%0A            print(%22msg: Notebook utilizado com sucesso%22)%0A            return%0A%0A        # Caso 3: bateria + carregador%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.get_potencia() * tempo)%0A            print(%22msg: Notebook utilizado com sucesso%22)%0A            return%0A%0A    def mostrar(self):%0A        status = %22Ligado%22 if self.__ligado else %22Desligado%22%0A        bat_str = %22Nenhuma%22%0A        car_str = %22Desconectado%22%0A%0A        if self.__bateria is not None:%0A            bat_str = f%22(%7Bself.__bateria.get_carga()%7D/%7Bself.__bateria.get_capacidade()%7D)%22%0A        if self.__carregador is not None:%0A            car_str = f%22(Pot%C3%AAncia %7Bself.__carregador.get_potencia()%7D)%22%0A%0A        print(f%22msg: Status: %7Bstatus%7D, Bateria: %7Bbat_str%7D, Carregador: %7Bcar_str%7D%22)\n",
            "lines": "0"
        },
        {
            "label": "2025-10-27_21-34-12",
            "content": "class Notebook:\n    def __init__(self):\n        self.__ligado: bool = False\n\n    def ligar(self):\n        if not self.__ligado:\n            self.__ligado = True\n            print(\"msg: notebook ligado\")\n        else:\n            print(\"msg: notebook j\u00e1 est\u00e1 ligado\")\n\n    def desligar(self):\n        if self.__ligado:\n            self.__ligado = False\n            print(\"msg: notebook desligado\")\n        else:\n            print(\"msg: notebook j\u00e1 est\u00e1 desligado\")\n\n    def mostrar(self):\n        status = \"Ligado\" if self.__ligado else \"Desligado\"\n        print(f\"msg: Status: {status}\")\n\n    def usar(self, tempo: int):\n        if not self.__ligado:\n            print(\"msg: erro: ligue o notebook primeiro\")\n        else:\n            print(f\"msg: Usando por {tempo} minutos\")\n\n\n# ================== PARTE 2 - Notebook com Bateria ==================\n\nclass Bateria:\n    def __init__(self, capacidade: int):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n\n    def get_capacidade(self):\n        return self.__capacidade\n\n    def get_carga(self):\n        return self.__carga\n\n    def descarregar(self, tempo: int):\n        self.__carga -= tempo\n        if self.__carga < 0:\n            self.__carga = 0\n\n    def carregar(self, tempo: int):\n        self.__carga += tempo\n        if self.__carga > self.__capacidade:\n            self.__carga = self.__capacidade\n\n    def mostrar(self):\n        print(f\"({self.__carga}/{self.__capacidade})\")\n\n\nclass Notebook2:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__bateria: Bateria | None = None\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria\n\n    def rmBateria(self):\n        if self.__bateria is not None:\n            print(\"msg: bateria removida\")\n            b = self.__bateria\n            self.__bateria = None\n            self.__ligado = False\n            return b\n        else:\n            print(\"msg: sem bateria\")\n            return None\n\n    def ligar(self):\n        if self.__bateria is None or self.__bateria.get_carga() <= 0:\n            print(\"msg: n\u00e3o foi poss\u00edvel ligar\")\n        else:\n            self.__ligado = True\n            print(\"msg: notebook ligado\")\n\n    def desligar(self):\n        self.__ligado = False\n        print(\"msg: notebook desligado\")\n\n    def usar(self, tempo: int):\n        if not self.__ligado:\n            print(\"msg: notebook desligado\")\n            return\n\n        carga_atual = self.__bateria.get_carga()\n        if carga_atual == 0:\n            print(\"msg: notebook descarregado\")\n            self.__ligado = False\n            return\n\n        if tempo >= carga_atual:\n            print(f\"msg: Usando por {carga_atual} minutos, notebook descarregou\")\n            self.__bateria.descarregar(tempo)\n            self.__ligado = False\n        else:\n            print(f\"msg: Usando por {tempo} minutos\")\n            self.__bateria.descarregar(tempo)\n\n    def mostrar(self):\n        status = \"Ligado\" if self.__ligado else \"Desligado\"\n        if self.__bateria is None:\n            print(f\"msg: Status: {status}, Bateria: Nenhuma\")\n        else:\n            print(f\"msg: Status: {status}, Bateria: ({self.__bateria.get_carga()}/{self.__bateria.get_capacidade()})\")\n\n\n# ================== PARTE 3 - Notebook com Bateria e Carregador ==================\n\nclass Carregador:\n    def __init__(self, potencia: int):\n        self.__potencia = potencia\n\n    def get_potencia(self):\n        return self.__potencia\n\n    def mostrar(self):\n        print(f\"(Pot\u00eancia {self.__potencia})\")\n\n\nclass Notebook3:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__bateria: Bateria | None = None\n        self.__carregador: Carregador | None = None\n\n    def setBateria(self, bateria: Bateria):\n        self.__bateria = bateria\n\n    def rmBateria(self):\n        if self.__bateria is not None:\n            print(\"msg: bateria removida\")\n            b = self.__bateria\n            self.__bateria = None\n            if self.__carregador is None:\n                self.__ligado = False\n            return b\n        else:\n            print(\"msg: sem bateria\")\n            return None\n\n    def setCarregador(self, carregador: Carregador):\n        self.__carregador = carregador\n\n    def rmCarregador(self):\n        if self.__carregador is not None:\n            print(\"msg: carregador removido\")\n            self.__carregador = None\n            if self.__bateria is None:\n                self.__ligado = False\n        else:\n            print(\"msg: sem carregador\")\n\n    def ligar(self):\n        if (self.__bateria and self.__bateria.get_carga() > 0) or self.__carregador:\n            self.__ligado = True\n            print(\"msg: notebook ligado\")\n        else:\n            print(\"msg: n\u00e3o foi poss\u00edvel ligar\")\n\n    def usar(self, tempo: int):\n        if not self.__ligado:\n            print(\"msg: notebook desligado\")\n            return\n\n        # Caso 1: apenas bateria\n        if self.__bateria and not self.__carregador:\n            carga = self.__bateria.get_carga()\n            if tempo >= carga:\n                print(f\"msg: Usando por {carga} minutos, notebook descarregou\")\n                self.__bateria.descarregar(tempo)\n                self.__ligado = False\n            else:\n                print(f\"msg: Usando por {tempo} minutos\")\n                self.__bateria.descarregar(tempo)\n            return\n\n        # Caso 2: apenas carregador\n        if self.__carregador and not self.__bateria:\n            print(\"msg: Notebook utilizado com sucesso\")\n            return\n\n        # Caso 3: bateria + carregador\n        if self.__bateria and self.__carregador:\n            self.__bateria.carregar(self.__carregador.get_potencia() * tempo)\n            print(\"msg: Notebook utilizado com sucesso\")\n            return\n\n    def mostrar(self):\n        status = \"Ligado\" if self.__ligado else \"Desligado\"\n        bat_str = \"Nenhuma\"\n        car_str = \"Desconectado\"\n\n        if self.__bateria is not None:\n            bat_str = f\"({self.__bateria.get_carga()}/{self.__bateria.get_capacidade()})\"\n        if self.__carregador is not None:\n            car_str = f\"(Pot\u00eancia {self.__carregador.get_potencia()})\"\n\n        print(f\"msg: Status: {status}, Bateria: {bat_str}, Carregador: {car_str}\")",
            "lines": "205"
        }
    ]
}