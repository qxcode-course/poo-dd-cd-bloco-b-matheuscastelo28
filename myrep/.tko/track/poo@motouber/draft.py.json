{
    "patches": [
        {
            "label": "2025-10-27_19-50-57",
            "content": "@@ -1,6350 +1,84 @@\n-class Pessoa: %0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome %0A        self.__dinheiro = dinheiro %0A    %0A    def get_nome(self):%0A        return self.__nome%0A    %0A    def get_dinheiro(self):%0A        return self.__dinheiro%0A    %0A    def adicionar_Saldo(self, valor: float):%0A        self.__dinheiro += valor %0A%0A    def remover_Saldo(self, valor: float):%0A        if valor %3E self.__dinheiro:%0A            pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return pago%0A        else:%0A            self.__dinheiro -= valor%0A            return valor%0A        %0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D:%7Bint(self.__dinheiro)%7D%22%0A    %0A%0Aclass Moto:%0A    def __init__(self, custo = 0, motorista = None, passageiro = None):%0A        self.__custo = custo%0A        self.__motorista = motorista%0A        self.__passageiro = passageiro%0A%0A    def embarcar_Motorista(self, motorista: Pessoa):%0A        self.__motorista = motorista%0A%0A    def embarcar_Passageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return %0A        self.__passageiro = passageiro%0A    %0A    def dirigir(self, km: float):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return%0A        self.__custo += km%0A%0A    def desembarcar_Passageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return %0A        %0A        pago = self.__passageiro.remover_Saldo(self.__custo)%0A        if pago %3C self.__custo:%0A            print(%22fail: Passenger does not have enough money%22)%0A        self.__motorista.adicionar_Saldo(self.__custo)%0A        print(f%22%7Bself.__passageiro.get_nome()%7D:%7Bint(self.__passageiro.get_dinheiro())%7D left%22)%0A        %0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        return f%22Cost: %7Bself.__custo%7D, Driver: %7Bself.__motorista%7D, Passenger: %7Bself.__passageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Motorista(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22setPass%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Passageiro(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22drive%22:%0A            km = int(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.desembarcar_Passageiro()%0A%0A%0Amain()%0A%0A%0A. %0A%0Aclass Bateria:%0A    def __init__(self, carga: int):%0A        self.__carga = carga %0A        self.__capacidade = carga %0A        %0A    %0A    def descarregar(self, tempo: int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A%0A    def carregar(self, potencia: int, tempo: int):%0A        self.__carga += potencia * tempo %0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A%0A    def get_carga(self):%0A        return self.__carga%0A    %0A    def get_capacidade(self):%0A        return self.__capacidade%0A    %0A    def __str__(self):%0A        return f%22Bateria %7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__carregador = None%0A        self.__bateria = None%0A        self.__ligado = False%0A        self.__tempo = 0%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if self.__carregador is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador.get_potencia()%7DW%22)%0A        self.__carregador = None%0A        if self.__bateria is None:%0A            self.__ligado = False%0A%0A    def%0A%0A    def turn_off(self):%0A        self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempo += tempo%0A%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.get_potencia(), tempo)%0A            return%0A%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        if self.__bateria and not self.__carregador:%0A            carga_inicial = self.__bateria.get_carga()%0A            self.__bateria.descarregar(tempo)%0A            if self.__bateria.get_carga() == 0 and carga_inicial %3E 0:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A%0A    def __str__(self):%0A        if not self.__ligado:%0A            base = %22Notebook: desligado%22%0A        else:%0A            base = f%22Notebook: ligado por %7Bself.__tempo%7D min%22%0A%0A        partes = %5B%5D%0A        if self.__carregador:%0A            partes.append(str(self.__carregador))%0A        if self.__bateria:%0A            partes.append(str(self.__bateria))%0A        if partes:%0A            base += %22, %22 + %22, %22.join(partes)%0A        return base%0A%0A%0Adef main():%0A    notebook = Notebook()%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(notebook)%0A%0A        elif args%5B0%5D == %22set_charger%22:%0A            potencia = int(args%5B1%5D)%0A            notebook.set_charger(potencia)%0A%0A        elif args%5B0%5D == %22rm_charger%22:%0A            notebook.rm_charger()%0A%0A        elif args%5B0%5D == %22set_battery%22:%0A            carga = int(args%5B1%5D)%0A            notebook.set_battery(carga)%0A%0A        elif args%5B0%5D == %22rm_battery%22:%0A            notebook.rm_battery()%0A%0A        elif args%5B0%5D == %22turn_on%22:%0A            notebook.turn_on()%0A%0A        elif args%5B0%5D == %22turn_off%22:%0A            notebook.turn_off()%0A%0A        elif args%5B0%5D == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.use(tempo)%0A%0A%0Amain()\n+@@ -1,63 +0,0 @@%0A-class Tabaco:%250A    def __init__(self, large: int, profund: int):%0A\n",
            "lines": "2"
        },
        {
            "label": "2025-10-27_20-33-33",
            "content": "@@ -4314,16 +4314,24 @@\n  False%0A%0A\n+    def%0A\n %0A    def\n",
            "lines": "248"
        },
        {
            "label": "2025-10-27_20-33-42",
            "content": "@@ -1,4325 +1,39 @@\n-class Pessoa: %0A    def __init__(self, nome: str, dinheiro: float):%0A        self.__nome = nome %0A        self.__dinheiro = dinheiro %0A    %0A    def get_nome(self):%0A        return self.__nome%0A    %0A    def get_dinheiro(self):%0A        return self.__dinheiro%0A    %0A    def adicionar_Saldo(self, valor: float):%0A        self.__dinheiro += valor %0A%0A    def remover_Saldo(self, valor: float):%0A        if valor %3E self.__dinheiro:%0A            pago = self.__dinheiro%0A            self.__dinheiro = 0%0A            return pago%0A        else:%0A            self.__dinheiro -= valor%0A            return valor%0A        %0A    def __str__(self):%0A        return f%22%7Bself.__nome%7D:%7Bint(self.__dinheiro)%7D%22%0A    %0A%0Aclass Moto:%0A    def __init__(self, custo = 0, motorista = None, passageiro = None):%0A        self.__custo = custo%0A        self.__motorista = motorista%0A        self.__passageiro = passageiro%0A%0A    def embarcar_Motorista(self, motorista: Pessoa):%0A        self.__motorista = motorista%0A%0A    def embarcar_Passageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return %0A        self.__passageiro = passageiro%0A    %0A    def dirigir(self, km: float):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return%0A        self.__custo += km%0A%0A    def desembarcar_Passageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return %0A        %0A        pago = self.__passageiro.remover_Saldo(self.__custo)%0A        if pago %3C self.__custo:%0A            print(%22fail: Passenger does not have enough money%22)%0A        self.__motorista.adicionar_Saldo(self.__custo)%0A        print(f%22%7Bself.__passageiro.get_nome()%7D:%7Bint(self.__passageiro.get_dinheiro())%7D left%22)%0A        %0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        return f%22Cost: %7Bself.__custo%7D, Driver: %7Bself.__motorista%7D, Passenger: %7Bself.__passageiro%7D%22%0A%0A%0Adef main():%0A    moto = Moto()%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Motorista(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22setPass%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Passageiro(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22drive%22:%0A            km = int(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.desembarcar_Passageiro()%0A%0A%0Amain()%0A%0A%0A. %0A%0Aclass Bateria:%0A    def __init__(self, carga: int):%0A        self.__carga = carga %0A        self.__capacidade = carga %0A        %0A    %0A    def descarregar(self, tempo: int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A%0A    def carregar(self, potencia: int, tempo: int):%0A        self.__carga += potencia * tempo %0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A%0A    def get_carga(self):%0A        return self.__carga%0A    %0A    def get_capacidade(self):%0A        return self.__capacidade%0A    %0A    def __str__(self):%0A        return f%22Bateria %7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__carregador = None%0A        self.__bateria = None%0A        self.__ligado = False%0A        self.__tempo = 0%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if self.__carregador is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador.get_potencia()%7DW%22)%0A        self.__carregador = None%0A        if self.__bateria is None:%0A            self.__ligado = False%0A%0A\n+@@ -4318,692 +4318,8 @@%0A se%250A%250A%0A-\n     \n@@ -62,25 +62,27 @@\n carga: int):\n-%0A\n+%250A\n         self\n@@ -104,26 +104,30 @@\n teria(carga)\n-%0A%0A\n+%250A%250A\n     def rm_b\n@@ -135,25 +135,27 @@\n ttery(self):\n-%0A\n+%250A\n         if s\n@@ -168,33 +168,35 @@\n bateria is None:\n-%0A\n+%250A\n             prin\n@@ -193,25 +193,27 @@\n       print(\n-%22\n+%2522\n fail: Sem ba\n@@ -221,2532 +221,582 @@\n eria\n-%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria.get_carga()%7D/%7Bself.__bateria.get_capacidade()%7D%22)%0A        self.__bateria = None%0A        if self.__carregador is None:%0A            self.__ligado = False%0A%0A    def turn_on(self):%0A        if self.__ligado:%0A            return%0A        if self.__bateria and self.__bateria.get_carga() %3E 0:%0A            self.__ligado = True%0A        elif self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempo += tempo%0A%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.get_potencia(), tempo)%0A            return%0A%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        if self.__bateria and not self.__carregador:%0A            carga_inicial = self.__bateria.get_carga()%0A            self.__bateria.descarregar(tempo)%0A            if self.__bateria.get_carga() == 0 and carga_inicial %3E 0:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A%0A    def __str__(self):%0A        if not self.__ligado:%0A            base = %22Notebook: desligado%22%0A        else:%0A            base = f%22Notebook: ligado por %7Bself.__tempo%7D min%22%0A%0A        partes = %5B%5D%0A        if self.__carregador:%0A            partes.append(str(self.__carregador))%0A        if self.__bateria:%0A            partes.append(str(self.__bateria))%0A        if partes:%0A            base += %22, %22 + %22, %22.join(partes)%0A        return base%0A%0A%0Adef main():%0A    notebook = Notebook()%0A%0A    while True:%0A        line = input()%0A        args = line.split()%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(notebook)%0A%0A        elif args%5B0%5D == %22set_charger%22:%0A            potencia = int(args%5B1%5D)%0A            notebook.set_charger(potencia)%0A%0A        elif args%5B0%5D == %22rm_charger%22:%0A            notebook.rm_charger()%0A%0A        elif args%5B0%5D == %22set_battery%22:%0A            carga = int(args%5B1%5D)%0A            notebook.set_battery(carga)%0A%0A        elif args%5B0%5D == %22rm_battery%22:%0A            notebook.rm_battery()%0A%0A        elif args%5B0%5D == %22turn_on%22:%0A            notebook.turn_on()%0A%0A        elif args%5B0%5D == %22turn_off%22:%0A            notebook.turn_off()%0A%0A        elif args%5B0%5D == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.use(tempo)%0A%0A%0Amain()\n+%2522)%250A            return%250A        print(f%2522Removido %257Bself.__bateria.get_carga()%257D/%257Bself.__bateria.get_capacidade()%257D%2522)%250A        self.__bateria = None%250A        if self.__carregador is None:%250A            self.__ligado = False%250A%250A    def turn_on(self):%250A        if self.__ligado:%250A            return%250A        if self.__bateria and self.__bateria.get_carga() %253E 0:%250A            self.__ligado = True%250A        elif self.__carregador:%250A            self.__ligado = True%250A        else:%250A            print(%2522fail: n%25C3%25A3o foi poss%25C3%25ADvel ligar%2522)%250A%0A %250A   %0A\n",
            "lines": "4"
        },
        {
            "label": "2025-10-27_21-14-41",
            "content": "@@ -2771,16 +2771,20 @@\n %0A%0Amain()\n+%0A%0A%0A.\n  %0A%0Aclass\n",
            "lines": "268"
        },
        {
            "label": "2025-10-27_21-15-08",
            "content": "@@ -1,13 +1,12 @@\n-%0A\n class Pessoa\n@@ -2771,18 +2771,17 @@\n %0A%0Amain()\n-%0A%0A\n+ \n %0A%0Aclass \n",
            "lines": "265"
        },
        {
            "label": "2025-10-27_21-18-14",
            "content": "@@ -1,12 +1,13 @@\n+%0A\n class Pessoa\n@@ -2046,25 +2046,16 @@\n def main\n-_motouber\n ():%0A    \n@@ -2084,33 +2084,16 @@\n e True:%0A\n-        try:%0A    \n         \n@@ -2119,118 +2119,27 @@\n     \n-except EOFError:%0A            break%0A        args = line.split()%0A        if len(args) == 0:%0A            continue\n+args = line.split()\n %0A   \n@@ -2769,140 +2769,17 @@\n ()%0A%0A\n-        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0A# ========================== CLASSES NOTEBOOK ==========================\n+%0Amain()%0A%0A\n %0A%0Acl\n@@ -2888,24 +2888,33 @@\n de = carga %0A\n+        %0A\n     %0A    def\n@@ -3030,24 +3030,25 @@\n _carga = 0%0A%0A\n+%0A\n     def carr\n@@ -3219,16 +3219,17 @@\n cidade%0A%0A\n+%0A\n     def \n@@ -6165,25 +6165,16 @@\n def main\n-_notebook\n ():%0A    \n@@ -6216,25 +6216,8 @@\n ue:%0A\n-        try:%0A    \n     \n@@ -6247,118 +6247,27 @@\n     \n-except EOFError:%0A            break%0A        args = line.split()%0A        if len(args) == 0:%0A            continue\n+args = line.split()\n %0A   \n@@ -7014,433 +7014,11 @@\n o)%0A%0A\n-        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0A# ========================== ESCOLHA DO PROGRAMA ==========================%0A%0Aif __name__ == %22__main__%22:%0A    print(%22Escolha o programa:%22)%0A    print(%221 - MotoUber%22)%0A    print(%222 - Notebook%22)%0A    opcao = input(%22Digite 1 ou 2: %22).strip()%0A%0A    if opcao == %221%22:%0A        main_motouber()%0A    elif opcao == %222%22:%0A        main_notebook()%0A    else:%0A        print(%22Op%C3%A7%C3%A3o inv%C3%A1lida!%22\n+%0Amain(\n )\n",
            "lines": "268"
        },
        {
            "label": "2025-10-27_21-23-50",
            "content": "@@ -6,16 +6,17 @@\n  Pessoa:\n+ \n %0A    def\n@@ -27,32 +27,37 @@\n nit__(self, nome\n+: str\n , dinheiro):%0A   \n@@ -42,32 +42,39 @@\n e: str, dinheiro\n+: float\n ):%0A        self.\n@@ -86,16 +86,17 @@\n e = nome\n+ \n %0A       \n@@ -114,33 +114,38 @@\n heiro = dinheiro\n-%0A\n+ %0A    \n %0A    def  get_no\n@@ -133,25 +133,24 @@\n    %0A    def \n- \n get_nome(sel\n@@ -180,16 +180,20 @@\n .__nome%0A\n+    \n %0A    def\n@@ -193,17 +193,16 @@\n     def \n- \n get_dinh\n@@ -244,16 +244,20 @@\n inheiro%0A\n+    \n %0A    def\n@@ -261,24 +261,120 @@\n def \n-pagar\n+adicionar_Saldo\n (self,\n+ \n valor\n+: float):%0A        self.__dinheiro += valor %0A%0A    def remover_Saldo(self, valor: float\n ):%0A \n@@ -390,17 +390,16 @@\n  valor %3E\n-=\n  self.__\n@@ -416,30 +416,24 @@\n             \n-valor_\n pago = self.\n@@ -494,22 +494,16 @@\n  return \n-valor_\n pago%0A   \n@@ -575,16 +575,24 @@\n n valor%0A\n+        \n %0A    def\n@@ -643,2706 +643,7149 @@\n e%7D:%7B\n-self.__dinheiro%7D%22%0A%0Aclass Moto:%0A    def __init__(self):%0A        self.__custo = 0%0A        self.__motorista = None%0A        self.__passageiro = None%0A%0A    def set_motorista(self, nome, dinheiro):    %0A        self.__motorista = Pessoa(nome, dinheiro)%0A%0A    def set_passageiro(self, nome, dinheiro):%0A        if self.__motorista is None:%0A            print(%22fail: No driver available%22)%0A            return%0A        self.__passageiro = Pessoa(nome,dinheiro)%0A%0A    def drive(self, km):%0A        if self.__passageiro is not None:%0A            self.__custo += km%0A        else:%0A            print(%22fail: No passenger to drive%22)%0A%0A    def leave_passenger(self):%0A        if self.__passageiro is not None:%0A            passageiro_nome = self.__passageiro.get_nome()%0A            custo_total = self.__custo%0A            %0A            valor_pago_passageiro = self.__passageiro.pagar(custo_total)%0A            passageiro_dinheiro_restante = self.__passageiro.get_dinheiro()%0A%0A            if valor_pago_passageiro %3C custo_total:%0A                print(%22fail: Passenger does not have enough money%22) %0A%0A            print(f%22%7Bpassageiro_nome%7D:%7Bpassageiro_dinheiro_restante%7D left%22)%0A%0A            novo_dinheiro_motorista = self.__motorista.get_dinheiro() + custo_total%0A            self.__motorista = Pessoa(self.__motorista.get_nome(), novo_dinheiro_motorista)%0A%0A            self.__passageiro = None%0A            self.__custo = 0%0A           %0A        else:%0A            print(%22fail: No passagner to leave%22)%0A%0A    def __str__(self):%0A        motorista_info = str(self.__motorista) if self.__motorista else %22None%22%0A        passageiro_info = str(self.__passageiro) if self.__passageiro else %22None%22%0A        return f%22Cost: %7Bself.__custo%7D, Driver: %7Bmotorista_info%7D, Passenger: %7Bpassageiro_info%7D%22%0A%0Adef main():%0A    moto = Moto()%0A%0A    while True:%0A        try:%0A            full_line = input().strip()%0A            line = full_line.split()%0A        except EOFError:%0A            break%0A        %0A        if not line:%0A            continue%0A%0A        print(f%22$%7Bfull_line%7D%22)%0A        %0A        action = line%5B0%5D%0A%0A        if action==%22end%22:%0A            break%0A%0A        elif action == %22show%22:%0A            print(moto)%0A%0A        elif action == %22setDriver%22: %0A            nome = line%5B1%5D%0A            dinheiro = int(line%5B2%5D)%0A            moto.set_motorista(nome, dinheiro)%0A%0A        elif action == %22setPass%22:%0A            nome = line%5B1%5D%0A            dinheiro = int(line%5B2%5D)%0A            moto.set_passageiro(nome, dinheiro)%0A%0A        elif action == %22drive%22:%0A            km = int(line%5B1%5D)%0A            moto.drive(km)%0A            %0A        elif action == %22leavePass%22:%0A            moto.leave_passenger()%0A%0A        else:%0A            print(%22fail: Unknown command%22)%0A%0Aif __name__ == %22__main__%22:%0A    main(\n+int(self.__dinheiro)%7D%22%0A    %0A%0Aclass Moto:%0A    def __init__(self, custo = 0, motorista = None, passageiro = None):%0A        self.__custo = custo%0A        self.__motorista = motorista%0A        self.__passageiro = passageiro%0A%0A    def embarcar_Motorista(self, motorista: Pessoa):%0A        self.__motorista = motorista%0A%0A    def embarcar_Passageiro(self, passageiro: Pessoa):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return %0A        self.__passageiro = passageiro%0A    %0A    def dirigir(self, km: float):%0A        if self.__motorista is None:%0A            print(%22fail: no driver%22)%0A            return%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return%0A        self.__custo += km%0A%0A    def desembarcar_Passageiro(self):%0A        if self.__passageiro is None:%0A            print(%22fail: no passenger%22)%0A            return %0A        %0A        pago = self.__passageiro.remover_Saldo(self.__custo)%0A        if pago %3C self.__custo:%0A            print(%22fail: Passenger does not have enough money%22)%0A        self.__motorista.adicionar_Saldo(self.__custo)%0A        print(f%22%7Bself.__passageiro.get_nome()%7D:%7Bint(self.__passageiro.get_dinheiro())%7D left%22)%0A        %0A        self.__passageiro = None%0A        self.__custo = 0%0A%0A    def __str__(self):%0A        return f%22Cost: %7Bself.__custo%7D, Driver: %7Bself.__motorista%7D, Passenger: %7Bself.__passageiro%7D%22%0A%0A%0Adef main_motouber():%0A    moto = Moto()%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A        args = line.split()%0A        if len(args) == 0:%0A            continue%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(moto)%0A%0A        elif args%5B0%5D == %22setDriver%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Motorista(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22setPass%22:%0A            nome = args%5B1%5D%0A            dinheiro = float(args%5B2%5D)%0A            moto.embarcar_Passageiro(Pessoa(nome, dinheiro))%0A%0A        elif args%5B0%5D == %22drive%22:%0A            km = int(args%5B1%5D)%0A            moto.dirigir(km)%0A%0A        elif args%5B0%5D == %22leavePass%22:%0A            moto.desembarcar_Passageiro()%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0A# ========================== CLASSES NOTEBOOK ==========================%0A%0Aclass Bateria:%0A    def __init__(self, carga: int):%0A        self.__carga = carga %0A        self.__capacidade = carga %0A    %0A    def descarregar(self, tempo: int):%0A        self.__carga -= tempo%0A        if self.__carga %3C 0:%0A            self.__carga = 0%0A%0A    def carregar(self, potencia: int, tempo: int):%0A        self.__carga += potencia * tempo %0A        if self.__carga %3E self.__capacidade:%0A            self.__carga = self.__capacidade%0A%0A    def get_carga(self):%0A        return self.__carga%0A    %0A    def get_capacidade(self):%0A        return self.__capacidade%0A    %0A    def __str__(self):%0A        return f%22Bateria %7Bself.__carga%7D/%7Bself.__capacidade%7D%22%0A%0A%0Aclass Carregador:%0A    def __init__(self, potencia: int):%0A        self.__potencia = potencia%0A%0A    def get_potencia(self):%0A        return self.__potencia%0A%0A    def __str__(self):%0A        return f%22Carregador %7Bself.__potencia%7DW%22%0A%0A%0Aclass Notebook:%0A    def __init__(self):%0A        self.__carregador = None%0A        self.__bateria = None%0A        self.__ligado = False%0A        self.__tempo = 0%0A%0A    def set_charger(self, potencia: int):%0A        if self.__carregador is not None:%0A            print(%22fail: carregador j%C3%A1 conectado%22)%0A            return%0A        self.__carregador = Carregador(potencia)%0A%0A    def rm_charger(self):%0A        if self.__carregador is None:%0A            print(%22fail: Sem carregador%22)%0A            return%0A        print(f%22Removido %7Bself.__carregador.get_potencia()%7DW%22)%0A        self.__carregador = None%0A        if self.__bateria is None:%0A            self.__ligado = False%0A%0A    def set_battery(self, carga: int):%0A        self.__bateria = Bateria(carga)%0A%0A    def rm_battery(self):%0A        if self.__bateria is None:%0A            print(%22fail: Sem bateria%22)%0A            return%0A        print(f%22Removido %7Bself.__bateria.get_carga()%7D/%7Bself.__bateria.get_capacidade()%7D%22)%0A        self.__bateria = None%0A        if self.__carregador is None:%0A            self.__ligado = False%0A%0A    def turn_on(self):%0A        if self.__ligado:%0A            return%0A        if self.__bateria and self.__bateria.get_carga() %3E 0:%0A            self.__ligado = True%0A        elif self.__carregador:%0A            self.__ligado = True%0A        else:%0A            print(%22fail: n%C3%A3o foi poss%C3%ADvel ligar%22)%0A%0A    def turn_off(self):%0A        self.__ligado = False%0A%0A    def use(self, tempo: int):%0A        if not self.__ligado:%0A            print(%22fail: desligado%22)%0A            return%0A%0A        self.__tempo += tempo%0A%0A        if self.__bateria and self.__carregador:%0A            self.__bateria.carregar(self.__carregador.get_potencia(), tempo)%0A            return%0A%0A        if self.__carregador and not self.__bateria:%0A            return%0A%0A        if self.__bateria and not self.__carregador:%0A            carga_inicial = self.__bateria.get_carga()%0A            self.__bateria.descarregar(tempo)%0A            if self.__bateria.get_carga() == 0 and carga_inicial %3E 0:%0A                print(%22fail: descarregou%22)%0A                self.__ligado = False%0A%0A    def __str__(self):%0A        if not self.__ligado:%0A            base = %22Notebook: desligado%22%0A        else:%0A            base = f%22Notebook: ligado por %7Bself.__tempo%7D min%22%0A%0A        partes = %5B%5D%0A        if self.__carregador:%0A            partes.append(str(self.__carregador))%0A        if self.__bateria:%0A            partes.append(str(self.__bateria))%0A        if partes:%0A            base += %22, %22 + %22, %22.join(partes)%0A        return base%0A%0A%0Adef main_notebook():%0A    notebook = Notebook()%0A%0A    while True:%0A        try:%0A            line = input()%0A        except EOFError:%0A            break%0A        args = line.split()%0A        if len(args) == 0:%0A            continue%0A        print(f%22$%7Bline%7D%22)%0A%0A        if args%5B0%5D == %22end%22:%0A            break%0A%0A        elif args%5B0%5D == %22show%22:%0A            print(notebook)%0A%0A        elif args%5B0%5D == %22set_charger%22:%0A            potencia = int(args%5B1%5D)%0A            notebook.set_charger(potencia)%0A%0A        elif args%5B0%5D == %22rm_charger%22:%0A            notebook.rm_charger()%0A%0A        elif args%5B0%5D == %22set_battery%22:%0A            carga = int(args%5B1%5D)%0A            notebook.set_battery(carga)%0A%0A        elif args%5B0%5D == %22rm_battery%22:%0A            notebook.rm_battery()%0A%0A        elif args%5B0%5D == %22turn_on%22:%0A            notebook.turn_on()%0A%0A        elif args%5B0%5D == %22turn_off%22:%0A            notebook.turn_off()%0A%0A        elif args%5B0%5D == %22use%22:%0A            tempo = int(args%5B1%5D)%0A            notebook.use(tempo)%0A%0A        else:%0A            print(%22fail: comando invalido%22)%0A%0A%0A# ========================== ESCOLHA DO PROGRAMA ==========================%0A%0Aif __name__ == %22__main__%22:%0A    print(%22Escolha o programa:%22)%0A    print(%221 - MotoUber%22)%0A    print(%222 - Notebook%22)%0A    opcao = input(%22Digite 1 ou 2: %22).strip()%0A%0A    if opcao == %221%22:%0A        main_motouber()%0A    elif opcao == %222%22:%0A        main_notebook()%0A    else:%0A        print(%22Op%C3%A7%C3%A3o inv%C3%A1lida!%22\n )\n",
            "lines": "291"
        },
        {
            "label": "2025-10-27_21-27-58",
            "content": "class Pessoa:\n    def __init__(self, nome, dinheiro):\n        self.__nome = nome\n        self.__dinheiro = dinheiro\n\n    def  get_nome(self):\n        return self.__nome\n\n    def  get_dinheiro(self):\n        return self.__dinheiro\n\n    def pagar(self,valor):\n        if valor >= self.__dinheiro:\n            valor_pago = self.__dinheiro\n            self.__dinheiro = 0\n            return valor_pago\n        else:\n            self.__dinheiro -= valor\n            return valor\n\n    def __str__(self):\n        return f\"{self.__nome}:{self.__dinheiro}\"\n\nclass Moto:\n    def __init__(self):\n        self.__custo = 0\n        self.__motorista = None\n        self.__passageiro = None\n\n    def set_motorista(self, nome, dinheiro):    \n        self.__motorista = Pessoa(nome, dinheiro)\n\n    def set_passageiro(self, nome, dinheiro):\n        if self.__motorista is None:\n            print(\"fail: No driver available\")\n            return\n        self.__passageiro = Pessoa(nome,dinheiro)\n\n    def drive(self, km):\n        if self.__passageiro is not None:\n            self.__custo += km\n        else:\n            print(\"fail: No passenger to drive\")\n\n    def leave_passenger(self):\n        if self.__passageiro is not None:\n            passageiro_nome = self.__passageiro.get_nome()\n            custo_total = self.__custo\n            \n            valor_pago_passageiro = self.__passageiro.pagar(custo_total)\n            passageiro_dinheiro_restante = self.__passageiro.get_dinheiro()\n\n            if valor_pago_passageiro < custo_total:\n                print(\"fail: Passenger does not have enough money\") \n\n            print(f\"{passageiro_nome}:{passageiro_dinheiro_restante} left\")\n\n            novo_dinheiro_motorista = self.__motorista.get_dinheiro() + custo_total\n            self.__motorista = Pessoa(self.__motorista.get_nome(), novo_dinheiro_motorista)\n\n            self.__passageiro = None\n            self.__custo = 0\n           \n        else:\n            print(\"fail: No passagner to leave\")\n\n    def __str__(self):\n        motorista_info = str(self.__motorista) if self.__motorista else \"None\"\n        passageiro_info = str(self.__passageiro) if self.__passageiro else \"None\"\n        return f\"Cost: {self.__custo}, Driver: {motorista_info}, Passenger: {passageiro_info}\"\n\ndef main():\n    moto = Moto()\n\n    while True:\n        try:\n            full_line = input().strip()\n            line = full_line.split()\n        except EOFError:\n            break\n        \n        if not line:\n            continue\n\n        print(f\"${full_line}\")\n        \n        action = line[0]\n\n        if action==\"end\":\n            break\n\n        elif action == \"show\":\n            print(moto)\n\n        elif action == \"setDriver\": \n            nome = line[1]\n            dinheiro = int(line[2])\n            moto.set_motorista(nome, dinheiro)\n\n        elif action == \"setPass\":\n            nome = line[1]\n            dinheiro = int(line[2])\n            moto.set_passageiro(nome, dinheiro)\n\n        elif action == \"drive\":\n            km = int(line[1])\n            moto.drive(km)\n            \n        elif action == \"leavePass\":\n            moto.leave_passenger()\n\n        else:\n            print(\"fail: Unknown command\")\n\nif __name__ == \"__main__\":\n    main()",
            "lines": "116"
        }
    ]
}